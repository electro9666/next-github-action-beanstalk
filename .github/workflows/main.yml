# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-node@v1
      with:
        node-version: 14 #노드 버전 지정
    # node modules 캐싱처리 package-lock.json 파일 확인
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Install NPM dependencies (root)
      run: npm install
    - name: Build source code
      run: npm run build
    - name: Generate deployment package
      run: zip -r deploy.zip .next public package.json
    - name: Generate version-id
      id: generate-uuid
      uses: filipstefansson/uuid-action@v1
    - name: Deploy to ElasticBeanstalk
      uses: einaregilsson/beanstalk-deploy@v10
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: next-github-action-beanstalk
        environment_name: next-github-action-beanstalk-dev
        region: ap-northeast-2
        deployment_package: deploy.zip
        version_label: ${{ steps.generate-uuid.outputs.uuid }}
        version_description: ${{ github.SHA }}
        wait_for_environment_recovery: 180
